// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import emptypb "google.golang.org/protobuf/types/known/emptypb"
import kubgov1 "siigo.com/kubgo/src/api/proto/kubgo/v1"
import mock "github.com/stretchr/testify/mock"

// HealthServiceServer is an autogenerated mock type for the HealthServiceServer type
type HealthServiceServer struct {
	mock.Mock
}

// Health provides a mock function with given fields: _a0, _a1
func (_m *HealthServiceServer) Health(_a0 context.Context, _a1 *emptypb.Empty) (*kubgov1.HealthResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *kubgov1.HealthResponse
	if rf, ok := ret.Get(0).(func(context.Context, *emptypb.Empty) *kubgov1.HealthResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*kubgov1.HealthResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *emptypb.Empty) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
